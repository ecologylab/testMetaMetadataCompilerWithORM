package ecologylab.semantics.generated.test.test_articles;

import java.util.List;

import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.Type;

import ecologylab.semantics.metadata.builtins.Document;
import ecologylab.semantics.metadata.scalar.MetadataString;
import ecologylab.semantics.metametadata.MetaMetadataCompositeField;
import ecologylab.serialization.annotations.simpl_collection;
import ecologylab.serialization.annotations.simpl_composite;
import ecologylab.serialization.annotations.simpl_inherit;
import ecologylab.serialization.annotations.simpl_scalar;

/**
*  Article.java
*  s.im.pl serialization
*
*  Generated by JavaTranslator on 08/16/11.
*  Copyright 2011 Interface Ecology Lab. 
*/

/** 
 */ 
@simpl_inherit
@Entity
@Table(name = "article")
@Cacheable
@PrimaryKeyJoinColumn(name = "orm_id")
@Inheritance(strategy = InheritanceType.JOINED)
@DiscriminatorValue("ecologylab.semantics.generated.test.test_articles.Article")
public class Article extends Document
{
	/** 
	 */ 
	@simpl_collection("author")	@mm_name("authors")
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "article__authors", joinColumns = @JoinColumn(name = "article_id"), inverseJoinColumns = @JoinColumn(name = "author_id"))
	private List<Author> authors;

	/** 
	 * Metadata related to where an article is published.
	 */ 
	@simpl_composite	@mm_name("source")
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "source_id")
	private Source source;

	/** 
	 */ 
	@simpl_scalar	
	@Column(name = "pages")
	@Type(type = "ecologylab.semantics.compiler.orm.scalartypes.MetadataStringHibernateType")
	private ecologylab.semantics.metadata.scalar.MetadataString pages;

	public Article()
	{ }

	public Article(MetaMetadataCompositeField mmd) {
		super(mmd);
	}


	public List<Author> getAuthors()
	{
		return authors;
	}

	public void setAuthors(List<Author> authors)
	{
		this.authors = authors;
	}

	public Source getSource()
	{
		return source;
	}

	public void setSource(Source source)
	{
		this.source = source;
	}

	public MetadataString	pages()
	{
		MetadataString	result = this.pages;
		if (result == null)
		{
			result = new MetadataString();
			this.pages = result;
		}
		return result;
	}

	public String getPages()
	{
		return this.pages == null ? null : pages().getValue();
	}

	public ecologylab.semantics.metadata.scalar.MetadataString getPagesMetadata()
	{
		return pages;
	}

	public void setPages(String pages)
	{
		if (pages != null)
			this.pages().setValue(pages);
	}

	public void setPagesMetadata(ecologylab.semantics.metadata.scalar.MetadataString pages)
	{
		this.pages = pages;
	}
}
